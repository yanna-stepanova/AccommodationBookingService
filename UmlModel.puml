@startuml

abstract class AbstractEntity {
- id: Long
}
interface UserDetails
interface GrantedAuthority

class Accommodation {
- type : Type
- location : Location
- size : String
- amenities : Set<Amenity>
- dailyRate : BigDecimal
- availability : Integer
- isDeleted : boolean
}

class Location {
- country : String
- city : String
- region : String
- zipCode : String
- address : String
- description : String
- isDeleted : boolean
}

class Amenity {
- title : String
- description : String
- isDeleted : boolean
}

class Role {
- name : RoleName
- isDeleted : boolean
}


class User {
- email : String
- password : String
- firstName : String
- lastName : String
- role: Role
- isDeleted : boolean
}

class Booking {
- checkInDate : LocalDate
- checkOutDate : LocalDate
- accommodation : Accommodation
- user : User
- status : Status
- isDeleted : boolean
}

class Payment {
- status : Status
- booking : Booking
- amount : BigDecimal
- sessionUrl : URL
- sessionID : String
- isDeleted : boolean
}

enum Type {
    APARTMENT,
    GUEST_HOUSE,
    HOSTEL,
    HOTEL,
    HOUSE,
    VACATION_HOME,
    VILLA
}

enum RoleName {
    CUSTOMER,
    MANAGER,
    ADMIN
}

enum Status {
    PENDING,
    CONFIRMED,
    CANCELED,
    EXPIRED,
    PAID
}

note "org.springframework.security.core" as MyNote
MyNote .. UserDetails
MyNote .. GrantedAuthority

UserDetails <|.. User
GrantedAuthority <|.. Role

Booking --|> AbstractEntity
User -|> AbstractEntity
Role -|> AbstractEntity
Accommodation --|> AbstractEntity
Location --|> AbstractEntity
Payment --|> AbstractEntity
Amenity --|> AbstractEntity

User "n" o-- "1" Role
Booking "n" --o "1" User
Accommodation "n" --o "n" Amenity
Accommodation "1" --o "1" Location
Booking "n" -o "1" Accommodation
Booking "1" *-- "1" Payment

RoleName .> Role
Accommodation <. Type
Status ..> Payment
Booking <.. Status
@enduml
